package GUI;

import Logic.Food;
import recipe.java.net.http.SpoonacularAPI;
import java.sql.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.*;

/**
 *
 * @author emre
 */
public class AutoCompeleteGUI extends javax.swing.JFrame{

    /**
     * Creates new form AutoPanel
     */
    public AutoCompeleteGUI( SpoonacularAPI foodApi ) {
        this.foodApi = foodApi;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        foodList = new String[8];
    	labels = new ArrayList<JLabel>();

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        labels.add( jLabel1 );
        labels.add( jLabel2 );
        labels.add( jLabel3 );
        labels.add( jLabel4 );
        
        for ( JLabel label: labels ) {
        	label.setFont( FONT );
			
			label.addMouseListener( new labelsListener( labels.indexOf(label), this ) );
        }
        
        jTextField1 = new javax.swing.JTextField( "" );
        
        jTextField1.setText( "" );
        
//      jPanel1.setVisible( false );
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setCursor( new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR) );

        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                
            }
        });

        setDefaultCloseOperation( WindowConstants.EXIT_ON_CLOSE );
        setSize( 400, 300);
        setLocationRelativeTo( null );

        //JTextField
        jTextField1.addKeyListener( new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
            	String text = "";
            	
            	char c = evt.getKeyChar();
            	
                if( Character.isAlphabetic(c) )
                {
                	text = ( (JTextField) evt.getSource() ).getText();

                }

                if( ! text.equals( "" ) ) {
                    try {
                        foodList = foodApi.getFoodId( text );

                    } catch (IOException e) {
                        e.printStackTrace();
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    if ( foodList != null ) {
                        if ( foodList[0] != null)
                            jLabel1.setText(foodList[0]);

                        if (foodList[1] != null)
                            jLabel2.setText(foodList[1]);

                        if (foodList[2] != null)
                            jLabel3.setText(foodList[2]);

                        if (foodList[3] != null)
                            jLabel4.setText(foodList[3]);
                    }
                    else{
                        jLabel1.setText( "" );
                        jLabel2.setText( "" );
                        jLabel3.setText( "" );
                        jLabel4.setText( "" );
                    }
                    
                }
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    public class labelsListener extends MouseAdapter{
		private int index;
		private AutoCompeleteGUI frame;
		//Constructor
		public labelsListener( int index, AutoCompeleteGUI frame ) {
		    this.index = index;
		    this.frame = frame;
		}

		public void mouseClicked( MouseEvent event ) {

			foodName = labels.get( index ).getText();
			//System.out.println( foodName );
			int index = -1;
			for( int count = 0; count < foodList.length; count++ ){
			    if ( foodList[count] == foodName )
			        index = count + foodList.length/2;
            }
            Food food = null;
			if ( index != - 1){
                try {
                    food = foodApi.getFoodInformation( Integer.parseInt( foodList[ index ]  ) );
                    System.out.println( "ID: " + food.getId() + " Name: " + food.toString() + " Main: " + food.getMain() + " Calorie: " + food.getCaloriePerPortion() );
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            String name = "testuser";


            int id1 = food.getId();
            String foodname1 = food.getFoodName(); //
            int expirydate1 = 0; //
            String main1 = food.getMain();
            double quantity1 = 0; //(sonra userdan)
            double calorie1 = food.getCaloriePerPortion().doubleValue();

            System.out.println( " id " + id1 );
            System.out.println( " foodname1 " + foodname1 );
            System.out.println( " expirydate1 " + expirydate1 );
            System.out.println( " id " + id1 );

            //// Database
            try{
                Class.forName( "com.mysql.cj.jdbc.Driver" );
                java.sql.Connection connect = DriverManager.getConnection(
                        "jdbc:mysql://34.141.44.144:3306/" + name , "root", "root" );

                PreparedStatement statement = ((java.sql.Connection) connect).prepareStatement("insert into food  values (?,?,?,?,?,?)");

                statement.setInt(1, id1 );
                statement.setString(2, foodname1 );
                statement.setInt(3, expirydate1);
                statement.setString(4, main1 );
                statement.setDouble(5, quantity1 );
                statement.setDouble(6, calorie1 );

                statement.executeUpdate();

            }
            catch( Exception e ) {
                System.out.println( e ) ;

            }

            int a = JOptionPane.showConfirmDialog( frame,  ( foodName.substring(0, 1).toUpperCase() + foodName.substring(1) ) + "is added to the storage." +
                    " Do you want to add more?", "Quit", JOptionPane.INFORMATION_MESSAGE );

            if( a == JOptionPane.YES_OPTION ){
                new AutoCompeleteGUI( foodApi );
                System.out.println("YES");
                //setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );

            }
            else if( a == JOptionPane.NO_OPTION ){
                System.out.println("NO");

                //frame.dispose();
                System.exit(0);
            }
		}
		
		public void mouseEntered( MouseEvent event ) {
			Font font = labels.get( index ).getFont();
			labels.get(index).setFont( font.deriveFont( Font.BOLD ) );
		}
		
		public void mouseExited( MouseEvent e ) {  
			labels.get(index).setFont( FONT );
		}
	}

    // Variables declaration - do not modify   
    public final static Font FONT = new Font( "Comic Sans MS" , Font.PLAIN, 12);

    private SpoonacularAPI foodApi;
    private String[] foodList;
    private String foodName = "";
    private ArrayList<JLabel> labels;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
          
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        String apiKey = "2b1ad64154msh266681e9461a336p1bfd1bjsndcdef3e10f2a";
        String apiKey2 = "609871132cmshf0661655cd3fa40p1266fbjsn0a5ce850b254";
        String apiKey3 = "da73587c8emsh6ca56b7d9f2a385p1699dcjsnf6a7ee99f8e3";
        SpoonacularAPI foodApi = new SpoonacularAPI( apiKey );

    	//JFrame frame = new JFrame("");

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AutoCompeleteGUI( foodApi ).setVisible(true);
            }
        });
    	
    }

}
